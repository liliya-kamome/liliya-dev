<div class="modeButton">
  <input
    type="checkbox"
    name="lightMode"
    value="lightMode"
    aria-label="モードを切り替える"
    aria-pressed="false"
    class="modeButton__input"
    id="themeButton"
    data-state=""
  />
  <label for="themeButton">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="20"
      viewBox="0 -960 960 960"
      width="18"
      height="18"
      class="modeButton__icon"
      id="lightMode"
      ><path
        d="M480-373q44.583 0 75.792-31.208Q587-435.417 587-480t-31.208-75.792Q524.583-587 480-587t-75.792 31.208Q373-524.583 373-480t31.208 75.792Q435.417-373 480-373Zm-.226 46Q415-327 371-371.226t-44-109Q327-545 371.226-589t109-44Q545-633 589-588.774t44 109Q633-415 588.774-371t-109 44ZM229-457H61v-46h168v46Zm670 0H731v-46h168v46ZM457-731v-168h46v168h-46Zm0 670v-168h46v168h-46ZM288-641 185-744l30-34 106 103-33 34Zm457 454-102-96 30-36 102 103-30 29ZM639-672l105-101 30 28-99 107-36-34ZM183-216l100-99 32 28-99 104-33-33Zm297-264Z"
      ></path></svg
    >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 -960 960 960"
      width="18"
      height="18"
      class="modeButton__icon"
      id="darkMode"
      ><path
        fill="#fff"
        d="M482.961-183q-123.711 0-210.336-86.625Q186-356.25 186-480q0-108.417 68.222-189.708Q322.444-751 424.761-772q-5.943 0-9.352-.5Q412-773 415-773q-3 29-4 55.5t-1 46.5q0 109.667 78.167 186.833Q566.333-407 677-407q19.891 0 41.946.5Q741-406 774-414V-421.761q-20 102.317-101.331 170.539T482.961-183Zm.039-46q67 0 127.276-36.074Q670.553-301.147 705-363q-6 0-13.667 1-7.666 1-13.333 1-130.48 0-222.24-90.591Q364-542.182 364-671q0-10.667 1-18.333Q366-697 367-702q-62.853 34.447-98.926 94.224Q232-548 232-480q0 104.614 73.193 177.807Q378.386-229 483-229Zm-20-231Z"
      ></path></svg
    >
  </label>
</div>
<style lang="scss">
  @use '../../styles/_variables.scss' as v;
  .modeButton {
    @include v.iconBtnStyle();
    padding-bottom: 0.45em;
    &__input {
      display: none;
    }
    &__icon {
      display: none;
      font-size: 2rem;
      &--active {
        display: block;
      }
    }
  }
  :root[class='dark-mode'] {
    .modeButton {
      border: solid 1px #27272a;
      &__icon {
        color: #fff;
      }
    }
  }
</style>
<script is:inline>
  const osDark = matchMedia('(prefers-color-scheme: dark)');
  const inputButton = document.getElementById('themeButton');
  const light = document.getElementById('lightMode');
  const dark = document.getElementById('darkMode');

  function changeDarkMode() {
    document.documentElement.classList.add('dark-mode');
    document.documentElement.classList.remove('light-mode');
    dark?.classList.add('modeButton__icon--active');
    light?.classList.remove('modeButton__icon--active');
    inputButton.setAttribute('data-state', 'false');
    window.localStorage.setItem('mode', 'dark');
  }

  function changeLightMode() {
    document.documentElement.classList.add('light-mode');
    document.documentElement.classList.remove('dark-mode');
    dark?.classList.remove('modeButton__icon--active');
    light?.classList.add('modeButton__icon--active');
    inputButton.setAttribute('data-state', 'true');
    window.localStorage.setItem('mode', 'light');
  }

  if (localStorage.getItem('mode') === 'dark') {
    changeDarkMode();
  } else if (localStorage.getItem('mode') === 'light') {
    changeLightMode();
  }
  if (osDark) {
    switch (osDark.matches) {
      case true:
        window.localStorage.setItem('mode', 'dark');
        inputButton.setAttribute('data-state', 'false');
        break;
      case false:
        inputButton.setAttribute('data-state', 'true');
        break;
    }
  }
  inputButton?.addEventListener('click', () => {
    const inputButtonState = inputButton.getAttribute('data-state');
    if (inputButtonState) {
      switch (inputButtonState) {
        //lightの時
        case 'false':
          changeLightMode();
          break;
        //darkの時
        case 'true':
          changeDarkMode();
      }
    }
  });
</script>
